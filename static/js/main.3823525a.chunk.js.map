{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js","parent_style.module.css","form_style.module.css","full_list.module.css"],"names":["Todo","todo","toggleTodo","className","full_list","todolist_member","type","checked","complete","onChange","id","name","TodoList","todos","map","App","useState","setTodos","todoNameRef","useRef","LOCAL_STORAGE_KEY","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","parent_styles","parent_div","form_styles","form_style","ref","seperator","value","onClick","current","prevTodos","uuid","add_btn","newTodos","find","number_left","filter","length","clear_btns","indi_clear_btn","clear_all_btn","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":";sMAKe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAKjC,OACI,8BAMI,gCAEI,sBAAKC,UAAWC,IAAUC,gBAA1B,UACI,uBAAOC,KAAK,WAAWC,QAASN,EAAKO,SAAUC,SAd/D,WAEIP,EAAWD,EAAKS,OAaHT,EAAKU,YClBX,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOX,EAAc,EAAdA,WAQtC,OAEIW,EAAMC,KAAI,SAAAb,GAKN,OAAO,cAACD,EAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKS,O,4CCiFpBK,MAvFf,WAME,MAA0BC,mBAAS,IAAnC,mBAAOH,EAAP,KAAcI,EAAd,KAEMC,EAAcC,mBAEdC,EAAoB,gBAoD1B,OAlDAC,qBAAU,WAER,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQN,IAEhDE,GACFL,EAASK,KAEV,IAEHD,qBAAU,WACRI,aAAaE,QAAQP,EAAmBG,KAAKK,UAAUf,MAGvD,CAACA,IAsCD,sBAAKV,UAAW0B,IAAcC,WAA9B,UAIE,uBAAM3B,UAAW4B,IAAYC,WAA7B,UACE,uBAAOC,IAAKf,EAAaZ,KAAK,OAAOH,UAAU,eAC/C,qBAAKA,UAAW4B,IAAYG,YAC5B,uBAAO5B,KAAK,SAAS6B,MAAM,WAAWC,QA1C5C,WACE,IAAMzB,EAAOO,EAAYmB,QAAQF,MACpB,KAATxB,IAEJM,GAAS,SAAAqB,GAIP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE5B,GAAI6B,cAAQ5B,KAAMA,EAAMH,UAAU,QAG5DU,EAAYmB,QAAQF,MAAQ,OA+BsChC,UAAW4B,IAAYS,aAIvF,cAAC5B,EAAD,CAAUC,MAAOA,EAAOX,WAhC5B,SAAoBQ,GAElB,IAAM+B,EAAQ,YAAO5B,GAGfZ,EAAOwC,EAASC,MAAK,SAAAzC,GAAI,OAAIA,EAAKS,KAAOA,KAC/CT,EAAKO,UAAYP,EAAKO,SACtBS,EAASwB,MA2BP,oBAAGtC,UAAW0B,IAAcc,YAA5B,UAA0C9B,EAAM+B,QAAO,SAAA3C,GAAI,OAAKA,EAAKO,YAAUqC,OAA/E,iBAEA,sBAAK1C,UAAW0B,IAAciB,WAA9B,UACE,wBAAQV,QA3Bd,WACE,IAAMK,EAAW5B,EAAM+B,QAAO,SAAA3C,GAAI,OAAKA,EAAKO,YAC5CS,EAASwB,IAyB6BtC,UAAW0B,IAAckB,eAA3D,6BACA,wBAAQX,QAvBd,WAEEnB,EADiB,KAsBoBd,UAAS,UAAK0B,IAAckB,eAAnB,YAAqClB,IAAcmB,eAA7F,8BCxFRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,WAAa,iCAAiC,WAAa,iCAAiC,eAAiB,qCAAqC,cAAgB,oCAAoC,YAAc,oC,kBCAtOD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,UAAY,8BAA8B,QAAU,8B,kBCAlHD,EAAOC,QAAU,CAAC,gBAAkB,sC","file":"static/js/main.3823525a.chunk.js","sourcesContent":["import React from 'react';\r\nimport full_list from \"./full_list.module.css\";\r\n\r\n// export default function Todo({ todo }) {\r\n//* adding toggleTodo\r\nexport default function Todo({ todo, toggleTodo }) {\r\n    function handleTodoChange() {\r\n        //? seperate function made so that id can be passed\r\n        toggleTodo(todo.id)\r\n    }\r\n    return (\r\n        <div>\r\n            {/* {todo} */}\r\n\r\n            {/* after making id name attrs */}\r\n            {/* {todo.name} */}\r\n            {/* making checkboxes to show completion */}\r\n            <label>\r\n                {/* <input type=\"checkbox\" checked={todo.complete}></input> */}\r\n                <div className={full_list.todolist_member}>\r\n                    <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoChange}></input>\r\n                    {todo.name}\r\n                </div>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n    // return (\r\n    //     <div>\r\n    //         {/* Hello World */}\r\n    //         {todos.length}\r\n    //     </div>\r\n    // )\r\n\r\n    return (\r\n        //!mapping the Todo object from Todo.js\r\n        todos.map(todo => {\r\n            // return <Todo key={todo} todo={todo}/>\r\n            // key has to be unique\r\n            // extra key attribute make react only re-render those which change and not all the members\r\n            // return <Todo key={todo.id} todo={todo} />\r\n            return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\r\n        })\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\n//! ^^{ useState } to define state\n//! ^^ { useRef } to enable referencing elements, here, to be able to take input\n//! to store todos in locally to prevent deletion in reloads\n\nimport TodoList from \"./TodoList\";\nimport parent_styles from \"./parent_style.module.css\";\nimport form_styles from \"./form_style.module.css\";\n\nimport { v4 as uuid } from \"uuid\";\n// import Todo_Form from './Form';\n\nfunction App() {\n  // const [todos,setTodos] = useState(['Todo 1','Todo 2'])\n  //? first member is all of the todos\n  //? and setTodos is the function to create/change each\n\n  // const [todos, setTodos] = useState([{ id: 1, name: 'todo1', complete: false }])\n  const [todos, setTodos] = useState([])\n\n  const todoNameRef = useRef()\n\n  const LOCAL_STORAGE_KEY = 'todoApp.todos'\n\n  useEffect(() => {\n    //? to load stored todos\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    //?parsing to make it string obj\n    if (storedTodos)\n      setTodos(storedTodos)\n    //^ if statement to prevent loading if empty\n  }, [])  //? ,empty therefore function called once\n  //^ id when storing locally\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  },\n    //? the below array list dependencies which if changed will call the function\n    [todos])\n  //^ only stores but does not load\n\n  function handleAddTodo() {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    // console.log(name)\n    setTodos(prevTodos => {\n      // to access prev todos to clear all of them\n      // return [...prevTodos,{id:1,name:name,complete:false}]\n      //^ but the id remains same (ie, 1) therefore download library to generate random ones : uuid library\n      return [...prevTodos, { id: uuid(), name: name, complete: false }]\n      //! but todos erased when reloaded: use useEffect to store locally\n    })\n    todoNameRef.current.value = null  //to clear input after clicking add button\n  }\n\n  function toggleTodo(id) {\n    //? toggle on/off todos\n    const newTodos = [...todos]\n    //? ^copy made to not change original state varaible\n    //! always do this\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleClearTodo() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  function handleClearAll() {\n    const newTodos = []\n    setTodos(newTodos)\n  }\n\n  return (\n    <div className={parent_styles.parent_div}>\n      {/* <TodoList todos={todos} /> */}\n      {/* after adding toggleTodo... */}\n\n      <form className={form_styles.form_style}>\n        <input ref={todoNameRef} type=\"text\" className=\"todo_input\"></input>\n        <div className={form_styles.seperator}></div>\n        <input type=\"submit\" value=\"Add Todo\" onClick={handleAddTodo} className={form_styles.add_btn}></input>\n      </form>\n      {/* <Todo_Form /> */}\n\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n\n      <p className={parent_styles.number_left}>{todos.filter(todo => !todo.complete).length} left to do</p>\n\n      <div className={parent_styles.clear_btns}>\n        <button onClick={handleClearTodo} className={parent_styles.indi_clear_btn}>Clear Completed</button>\n        <button onClick={handleClearAll} className={`${parent_styles.indi_clear_btn} ${parent_styles.clear_all_btn}`}>Clear All</button>\n      </div>\n      {/* <div>0 left to do</div> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent_div\":\"parent_style_parent_div__3KEsg\",\"clear_btns\":\"parent_style_clear_btns__S58Mn\",\"indi_clear_btn\":\"parent_style_indi_clear_btn__292Pv\",\"clear_all_btn\":\"parent_style_clear_all_btn__sm_ud\",\"number_left\":\"parent_style_number_left__FUorD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_style\":\"form_style_form_style__3WB9h\",\"seperator\":\"form_style_seperator__3Afjw\",\"add_btn\":\"form_style_add_btn__3bK9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todolist_member\":\"full_list_todolist_member__xXFfm\"};"],"sourceRoot":""}